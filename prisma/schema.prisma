// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // Vercel Postgres Pool
  directUrl = env("POSTGRES_URL_NON_POOLING") // Direct connection for migrations
}

model User {
  id        String    @id @default(uuid()) // Changed to uuid for Supabase compatibility
  name      String?
  email     String    @unique
  password  String
  image     String?
  role      Role      @default(USER)
  createdAt DateTime  @default(now()) @db.Timestamp(6)
  updatedAt DateTime  @updatedAt @db.Timestamp(6)
  posts     Post[]
  projects  Project[]

  @@map("users") // Explicit table naming for Supabase convention
}

model Post {
  id        String   @id @default(uuid())
  title     String
  slug      String   @unique
  content   String   @db.Text // Added Text type for large content
  published Boolean  @default(false)
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @updatedAt @db.Timestamp(6)
  authorId  String
  author    User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  tags      Tag[]

  @@index([authorId])
  @@map("posts")
}

model Project {
  id           String   @id @default(uuid())
  title        String
  description  String   @db.Text
  image        String?
  liveUrl      String?
  githubUrl    String?
  technologies String[]
  createdAt    DateTime @default(now()) @db.Timestamp(6)
  updatedAt    DateTime @updatedAt @db.Timestamp(6)
  userId       String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@map("projects")
}

model Tag {
  id    String @id @default(uuid())
  name  String @unique
  posts Post[]

  @@map("tags")
}

enum Role {
  USER
  ADMIN
}
